from sklearn import svm
import os
import re



class SVMobj:
    def __init__(self,animalId):
        dict=[]
        index=0;
        files=os.listdir("./tmp/")
        controlFiles=[x for x in files if re.match(r"embedding"+"Control"+"[0-9]+.txt",x) is not None ]
        nrControl=len(controlFiles)
        labels={}
        for i in range(0,nrControl):
            with open("embedding"+str(i)+".txt") as file:
                w, h = [int(x) for x in next(file).split()]
                self.nrRows=w
                self.depth=h

                labels[index]=0
                r=[]
                for j in range(0,w):
                    r.append([float(x) for x in next(file).split()])
                dict.append(r)
                index=index+1;
        etohFiles = [x for x in files if re.match(r"embedding"+"EtOH"+"[0-9]+.txt",x) is not None]
        nrEtOH = len(etohFiles)

        for i in range(0, nrEtOH):
            with open("embedding" + str(i) + ".txt") as file:
                w, h = [int(x) for x in next(file).split()]
                self.nrRows = w
                self.depth = h

                labels[index]=1
                r = []
                for j in range(0, w):
                    r.append([float(x) for x in next(file).split()])
                dict.append(r)
                index = index + 1;
        self.data = dict
        self.labes=labels
    def train(self):
        nrOfNodes=len(self.data[0]);
        classifiers=[]
        for i in range(0,nrOfNodes):
            clf=svm.SVC(gamma='scale')
            m=self.data[0]
            n=m[0]

            X=[[X[i]] for X in self.data]
            X=[x for y in X for x in y]
            Y=self.labes
            clf.fit(X,Y);



obj=SVMobj(4)

obj.train()
